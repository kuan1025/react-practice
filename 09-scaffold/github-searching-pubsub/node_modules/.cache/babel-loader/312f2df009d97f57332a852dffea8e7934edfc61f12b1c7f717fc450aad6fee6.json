{"ast":null,"code":"var _jsxFileName = \"/Users/Damian/side-project/react-practice/09-scaffold/github-searching-pubsub/src/component/Search/index.jsx\";\nimport React, { Component } from 'react';\nimport axios from 'axios';\nimport PubSub from 'pubsub.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class Search extends Component {\n  constructor(...args) {\n    super(...args);\n    this.searchByUsername = () => {\n      //continuesly destructuring assignment and rename!!\n      const {\n        keywordElement: {\n          value: keyword\n        }\n      } = this;\n\n      // this.props.updateSearchingStatus({ firstLoading: false, isLoading: true });\n      PubSub.publish('updateData', {\n        firstLoading: false,\n        isLoading: true\n      });\n\n      // request\n      axios.get(`/api1/search/users?q=${keyword}`).then(response => {\n        // this.props.updateSearchingStatus(\n        //     {\n        //         isLoading: false,\n        //         users: response.data.items\n        //     })\n        PubSub.publish('updateData', {\n          isLoading: false,\n          users: response.data.items\n        });\n      }, error => {\n        console.log('Fail to request data ', error);\n        // this.props.updateSearchingStatus({ isLoading: false, errorMsg : error.message });\n      });\n    };\n  }\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"jumbotron\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"jumbotron-heading\",\n        children: \"search github users\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          ref: node => this.keywordElement = node,\n          placeholder: \"input key word and click searching\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 21\n        }, this), \"\\xA0\", /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: this.searchByUsername,\n          children: \"search\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }, this);\n  }\n}","map":{"version":3,"names":["React","Component","axios","PubSub","jsxDEV","_jsxDEV","Search","constructor","args","searchByUsername","keywordElement","value","keyword","publish","firstLoading","isLoading","get","then","response","users","data","items","error","console","log","render","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","ref","node","placeholder","onClick"],"sources":["/Users/Damian/side-project/react-practice/09-scaffold/github-searching-pubsub/src/component/Search/index.jsx"],"sourcesContent":["import React, { Component } from 'react'\nimport axios from 'axios'\nimport PubSub from 'pubsub.js'\n\n\nexport default class Search extends Component {\n\n\n    searchByUsername = () => {\n\n        //continuesly destructuring assignment and rename!!\n        const { keywordElement: { value: keyword } } = this;\n\n        // this.props.updateSearchingStatus({ firstLoading: false, isLoading: true });\n        PubSub.publish('updateData',{ firstLoading: false, isLoading: true })\n\n        // request\n        axios.get(`/api1/search/users?q=${keyword}`).then(\n            response => {\n                // this.props.updateSearchingStatus(\n                //     {\n                //         isLoading: false,\n                //         users: response.data.items\n                //     })\n                PubSub.publish('updateData',{ isLoading: false , users: response.data.items })\n\n            },\n            error => { \n                console.log('Fail to request data ', error) ;\n                // this.props.updateSearchingStatus({ isLoading: false, errorMsg : error.message });\n            }\n        )\n\n    }\n\n    render() {\n        return (\n            <section className=\"jumbotron\">\n                <h3 className=\"jumbotron-heading\">search github users</h3>\n                <div>\n\n                    <input type=\"text\" ref={node => this.keywordElement = node} placeholder=\"input key word and click searching\" />&nbsp;\n                    <button onClick={this.searchByUsername}>search</button>\n                </div>\n            </section>\n        )\n    }\n}\n"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,SAAS,QAAQ,OAAO;AACxC,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAOC,MAAM,MAAM,WAAW;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAG9B,eAAe,MAAMC,MAAM,SAASL,SAAS,CAAC;EAAAM,YAAA,GAAAC,IAAA;IAAA,SAAAA,IAAA;IAAA,KAG1CC,gBAAgB,GAAG,MAAM;MAErB;MACA,MAAM;QAAEC,cAAc,EAAE;UAAEC,KAAK,EAAEC;QAAQ;MAAE,CAAC,GAAG,IAAI;;MAEnD;MACAT,MAAM,CAACU,OAAO,CAAC,YAAY,EAAC;QAAEC,YAAY,EAAE,KAAK;QAAEC,SAAS,EAAE;MAAK,CAAC,CAAC;;MAErE;MACAb,KAAK,CAACc,GAAG,CAAC,wBAAwBJ,OAAO,EAAE,CAAC,CAACK,IAAI,CAC7CC,QAAQ,IAAI;QACR;QACA;QACA;QACA;QACA;QACAf,MAAM,CAACU,OAAO,CAAC,YAAY,EAAC;UAAEE,SAAS,EAAE,KAAK;UAAGI,KAAK,EAAED,QAAQ,CAACE,IAAI,CAACC;QAAM,CAAC,CAAC;MAElF,CAAC,EACDC,KAAK,IAAI;QACLC,OAAO,CAACC,GAAG,CAAC,uBAAuB,EAAEF,KAAK,CAAC;QAC3C;MACJ,CACJ,CAAC;IAEL,CAAC;EAAA;EAEDG,MAAMA,CAAA,EAAG;IACL,oBACIpB,OAAA;MAASqB,SAAS,EAAC,WAAW;MAAAC,QAAA,gBAC1BtB,OAAA;QAAIqB,SAAS,EAAC,mBAAmB;QAAAC,QAAA,EAAC;MAAmB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eAC1D1B,OAAA;QAAAsB,QAAA,gBAEItB,OAAA;UAAO2B,IAAI,EAAC,MAAM;UAACC,GAAG,EAAEC,IAAI,IAAI,IAAI,CAACxB,cAAc,GAAGwB,IAAK;UAACC,WAAW,EAAC;QAAoC;UAAAP,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,QAC/G,eAAA1B,OAAA;UAAQ+B,OAAO,EAAE,IAAI,CAAC3B,gBAAiB;UAAAkB,QAAA,EAAC;QAAM;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACtD,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACD,CAAC;EAElB;AACJ","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}