{"ast":null,"code":"var _jsxFileName = \"/Users/Damian/side-project/react-practice/09-scaffold/github-searching/src/component/Search/index.jsx\";\nimport React, { Component } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class Search extends Component {\n  constructor(...args) {\n    super(...args);\n    this.searchByUsername = () => {\n      //continuesly destructuring assignment and rename!!\n      const {\n        keywordElement: {\n          value: keyword\n        }\n      } = this;\n      this.props.updateSearchingStatus({\n        firstLoading: false,\n        isLoading: true\n      });\n      this.props.updateSearchingStatus({\n        isLoading: true\n      });\n      // request\n      // axios.get(`/api1/search/users?q=${keyword}`).then(\n      //     response => {\n      //         this.props.updateSearchingStatus(\n      //             {\n      //                 isLoading: false,\n      //                 users: response.data.items\n      //             })\n\n      //     },\n      //     error => { \n      //         console.log('Fail to request data ', error) ;\n      //         this.props.updateSearchingStatus({ isLoading: false, errorMsg : error.message });\n      //     }\n      // )\n\n      // fetch ()\n      fetch(`/api1/search/users?q=${keyword}`).then(response => {\n        console.log('connect success');\n        return response.json();\n      }, error => {\n        console.log('connect fail');\n        console.log(error);\n        return new Promise(() => {});\n      }).then(response => {\n        console.log('successfully receive data', response);\n      }, error => {\n        console.log('fail to receive data', error);\n      });\n      // fetch  optimization\n      fetch(`/api1/search/users?q=${keyword}`).then(response => {\n        console.log('connect success');\n        return response.json();\n      }).then(response => {\n        console.log('successfully receive data', response);\n      }).catch();\n    };\n  }\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"jumbotron\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"jumbotron-heading\",\n        children: \"search github users\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          ref: node => this.keywordElement = node,\n          placeholder: \"input key word and click searching\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 21\n        }, this), \"\\xA0\", /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: this.searchByUsername,\n          children: \"search\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 13\n    }, this);\n  }\n}","map":{"version":3,"names":["React","Component","axios","jsxDEV","_jsxDEV","Search","constructor","args","searchByUsername","keywordElement","value","keyword","props","updateSearchingStatus","firstLoading","isLoading","fetch","then","response","console","log","json","error","Promise","catch","render","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","ref","node","placeholder","onClick"],"sources":["/Users/Damian/side-project/react-practice/09-scaffold/github-searching/src/component/Search/index.jsx"],"sourcesContent":["import React, { Component } from 'react'\nimport axios from 'axios'\n\n\nexport default class Search extends Component {\n\n\n    searchByUsername = () => {\n        //continuesly destructuring assignment and rename!!\n        const { keywordElement: { value: keyword } } = this;\n        this.props.updateSearchingStatus({ firstLoading: false, isLoading: true });\n        this.props.updateSearchingStatus(\n            {\n                isLoading: true\n            })\n        // request\n        // axios.get(`/api1/search/users?q=${keyword}`).then(\n        //     response => {\n        //         this.props.updateSearchingStatus(\n        //             {\n        //                 isLoading: false,\n        //                 users: response.data.items\n        //             })\n\n        //     },\n        //     error => { \n        //         console.log('Fail to request data ', error) ;\n        //         this.props.updateSearchingStatus({ isLoading: false, errorMsg : error.message });\n        //     }\n        // )\n\n        // fetch ()\n        fetch(`/api1/search/users?q=${keyword}`).then(\n            response =>{\n                console.log('connect success')\n                return response.json();\n            },\n            error =>{\n                console.log('connect fail')\n                console.log(error)\n                return new Promise(()=>{})\n            }\n        ).then(\n            response =>{\n                console.log('successfully receive data', response)\n            },\n            error =>{\n                console.log('fail to receive data',error)\n            }\n        ) \n        // fetch  optimization\n        fetch(`/api1/search/users?q=${keyword}`).then(\n            response =>{\n                console.log('connect success')\n                return response.json();\n            }\n        ).then(\n            response =>{\n                console.log('successfully receive data', response)\n            }\n        ).catch(\n            \n        ) \n    }\n\n    render() {\n        return (\n            <section className=\"jumbotron\">\n                <h3 className=\"jumbotron-heading\">search github users</h3>\n                <div>\n\n                    <input type=\"text\" ref={node => this.keywordElement = node} placeholder=\"input key word and click searching\" />&nbsp;\n                    <button onClick={this.searchByUsername}>search</button>\n                </div>\n            </section>\n        )\n    }\n}\n"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,SAAS,QAAQ,OAAO;AACxC,OAAOC,KAAK,MAAM,OAAO;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAGzB,eAAe,MAAMC,MAAM,SAASJ,SAAS,CAAC;EAAAK,YAAA,GAAAC,IAAA;IAAA,SAAAA,IAAA;IAAA,KAG1CC,gBAAgB,GAAG,MAAM;MACrB;MACA,MAAM;QAAEC,cAAc,EAAE;UAAEC,KAAK,EAAEC;QAAQ;MAAE,CAAC,GAAG,IAAI;MACnD,IAAI,CAACC,KAAK,CAACC,qBAAqB,CAAC;QAAEC,YAAY,EAAE,KAAK;QAAEC,SAAS,EAAE;MAAK,CAAC,CAAC;MAC1E,IAAI,CAACH,KAAK,CAACC,qBAAqB,CAC5B;QACIE,SAAS,EAAE;MACf,CAAC,CAAC;MACN;MACA;MACA;MACA;MACA;MACA;MACA;MACA;;MAEA;MACA;MACA;MACA;MACA;MACA;;MAEA;MACAC,KAAK,CAAC,wBAAwBL,OAAO,EAAE,CAAC,CAACM,IAAI,CACzCC,QAAQ,IAAG;QACPC,OAAO,CAACC,GAAG,CAAC,iBAAiB,CAAC;QAC9B,OAAOF,QAAQ,CAACG,IAAI,CAAC,CAAC;MAC1B,CAAC,EACDC,KAAK,IAAG;QACJH,OAAO,CAACC,GAAG,CAAC,cAAc,CAAC;QAC3BD,OAAO,CAACC,GAAG,CAACE,KAAK,CAAC;QAClB,OAAO,IAAIC,OAAO,CAAC,MAAI,CAAC,CAAC,CAAC;MAC9B,CACJ,CAAC,CAACN,IAAI,CACFC,QAAQ,IAAG;QACPC,OAAO,CAACC,GAAG,CAAC,2BAA2B,EAAEF,QAAQ,CAAC;MACtD,CAAC,EACDI,KAAK,IAAG;QACJH,OAAO,CAACC,GAAG,CAAC,sBAAsB,EAACE,KAAK,CAAC;MAC7C,CACJ,CAAC;MACD;MACAN,KAAK,CAAC,wBAAwBL,OAAO,EAAE,CAAC,CAACM,IAAI,CACzCC,QAAQ,IAAG;QACPC,OAAO,CAACC,GAAG,CAAC,iBAAiB,CAAC;QAC9B,OAAOF,QAAQ,CAACG,IAAI,CAAC,CAAC;MAC1B,CACJ,CAAC,CAACJ,IAAI,CACFC,QAAQ,IAAG;QACPC,OAAO,CAACC,GAAG,CAAC,2BAA2B,EAAEF,QAAQ,CAAC;MACtD,CACJ,CAAC,CAACM,KAAK,CAEP,CAAC;IACL,CAAC;EAAA;EAEDC,MAAMA,CAAA,EAAG;IACL,oBACIrB,OAAA;MAASsB,SAAS,EAAC,WAAW;MAAAC,QAAA,gBAC1BvB,OAAA;QAAIsB,SAAS,EAAC,mBAAmB;QAAAC,QAAA,EAAC;MAAmB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eAC1D3B,OAAA;QAAAuB,QAAA,gBAEIvB,OAAA;UAAO4B,IAAI,EAAC,MAAM;UAACC,GAAG,EAAEC,IAAI,IAAI,IAAI,CAACzB,cAAc,GAAGyB,IAAK;UAACC,WAAW,EAAC;QAAoC;UAAAP,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,QAC/G,eAAA3B,OAAA;UAAQgC,OAAO,EAAE,IAAI,CAAC5B,gBAAiB;UAAAmB,QAAA,EAAC;QAAM;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACtD,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACD,CAAC;EAElB;AACJ","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}